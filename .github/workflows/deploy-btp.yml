# This is a basic workflow to help you get started with Actions

name: Build MTA & Deploy it to BTP

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 18.x
          check-latest: true

      - name: Install MTA Build Tool
        run: npm install -g mbt

      - name: Install dependency
        run: npm install       
        # Do not generate package-lock.json
        # See https://blogs.sap.com/2020/07/07/escaping-eintegrity-hell/
      # - name: Disable package-lock.json
      #   run: npm config set package-lock false
   
      - name: Build MTA
        run: mbt build -p cf
      - name: Upload Artifact
        uses: actions/upload-artifact@master	
        with:	
          name: mta
          path: ./mta_archives/github-action_1.0.0.mtar
   
      
  deploy:
     needs: build
     runs-on: ubuntu-latest
     steps:
       - name: Download Artifact
         uses: actions/download-artifact@master
         with:
           name: mta
           path: ./
       - name: Deploy to Cloud Foundry
         uses: guerric-p/cf-cli-action@master
         with:
           cf_api: ${{ secrets.CF_API }}
           cf_username: ${{ secrets.CF_USERNAME }}
           cf_password: ${{ secrets.CF_PASSWORD }}
           cf_org: ${{ secrets.CF_ORG }}
           cf_space: ${{ secrets.CF_SPACE }}
           command: deploy ./github-action_1.0.0.mtar -f
